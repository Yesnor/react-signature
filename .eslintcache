[{"D:\\Aregaki\\react-signature\\src\\index.js":"1","D:\\Aregaki\\react-signature\\src\\App.js":"2","D:\\Aregaki\\react-signature\\src\\reportWebVitals.js":"3","D:\\Aregaki\\react-signature\\src\\components\\Home.js":"4","D:\\Aregaki\\react-signature\\src\\components\\Type.js":"5","D:\\Aregaki\\react-signature\\src\\components\\Draw.js":"6","D:\\Aregaki\\react-signature\\src\\components\\Canvas.js":"7"},{"size":500,"mtime":1610711018131,"results":"8","hashOfConfig":"9"},{"size":484,"mtime":1611157001744,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1610636256160,"results":"11","hashOfConfig":"9"},{"size":1177,"mtime":1611158559292,"results":"12","hashOfConfig":"9"},{"size":7101,"mtime":1611254084003,"results":"13","hashOfConfig":"9"},{"size":566,"mtime":1611240381326,"results":"14","hashOfConfig":"9"},{"size":4128,"mtime":1615283033548,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"sx6zz1",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Aregaki\\react-signature\\src\\index.js",[],["32","33"],"D:\\Aregaki\\react-signature\\src\\App.js",[],"D:\\Aregaki\\react-signature\\src\\reportWebVitals.js",[],"D:\\Aregaki\\react-signature\\src\\components\\Home.js",[],"D:\\Aregaki\\react-signature\\src\\components\\Type.js",["34"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Type() {\r\n  const fonts = {\r\n    type1: \"Dancing Script, cursive\",\r\n    type2: \"Kaushan Script, cursive\",\r\n    type3: \"Marck Script, cursive\",\r\n    type4: \"Knewave, cursive\",\r\n    type5: \"Ruthie, cursive\",\r\n    type6: \"Sarina, cursive\",\r\n  };\r\n  const modalWidth = 466;\r\n  const modalHeight = 306;\r\n  const defaultSignature = \"Your Signature\";\r\n\r\n  const textRef = useRef();\r\n  const [signature, setSignature] = useState(\"\");\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [canvasFont, setCanvasFont] = useState(\"\");\r\n  const [ctx, setCtx] = useState(null);\r\n\r\n  const createCanvas = () => {\r\n    const canvas = textRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.fillStyle = \"white\";\r\n    ctx.fillRect(0, 0, modalWidth, modalHeight);\r\n    setCtx(ctx);\r\n  };\r\n  const clearCanvas = () => {\r\n    const canvas = textRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.clearRect(0, 0, modalWidth, modalHeight);\r\n  };\r\n  const typeSignature = (fontType) => {\r\n    ctx.font = \"5rem \" + fontType;\r\n    ctx.fillStyle = \"black\";\r\n    ctx.textAlign = \"center\";\r\n    ctx.fillText(signature, modalWidth / 2, modalHeight / 2);\r\n  };\r\n  const handleTyping = (e) => {\r\n    let name = e.target.value;\r\n    if (name.length <= 15) {\r\n      setSignature(name);\r\n    }\r\n  };\r\n\r\n  const saveImage = (canvas) => {\r\n    const data = canvas.toDataURL(\"image/png\");\r\n    const anchor = document.createElement(\"a\");\r\n    anchor.href = data;\r\n    anchor.download = \"Signature.png\";\r\n    anchor.click();\r\n    anchor.remove();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isModalOpen) {\r\n      typeSignature(canvasFont);\r\n    } else {\r\n      clearCanvas();\r\n    }\r\n  }, [isModalOpen]);\r\n\r\n  useEffect(() => {\r\n    createCanvas();\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"container typeSection\">\r\n      {/* Modal */}\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"exampleModal\"\r\n        tabIndex=\"-1\"\r\n        aria-labelledby=\"exampleModalLabel\"\r\n        aria-hidden=\"true\"\r\n        onClick={() => setIsModalOpen(!isModalOpen)}\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered\">\r\n          <div\r\n            className=\"modal-content\"\r\n            style={\r\n              signature ? { pointerEvents: \"none\" } : { pointerEvents: \"auto\" }\r\n            }\r\n          >\r\n            <div className=\"modal-body\">\r\n              <canvas\r\n                ref={textRef}\r\n                width={modalWidth}\r\n                height={modalHeight}\r\n              ></canvas>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-bs-dismiss=\"modal\"\r\n                onClick={() => setIsModalOpen(!isModalOpen)}\r\n                style={{ pointerEvents: \"auto\" }}\r\n              >\r\n                Close\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-success\"\r\n                data-bs-dismiss=\"modal\"\r\n                onClick={() => {\r\n                  setIsModalOpen(!isModalOpen);\r\n                  saveImage(textRef.current);\r\n                }}\r\n                style={{ pointerEvents: \"auto\" }}\r\n              >\r\n                Download\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Link to=\"/\">\r\n        <h5 className=\"mt-2\">\r\n          <span>\r\n            <strong>&#8592;</strong> Go Back\r\n          </span>\r\n        </h5>\r\n      </Link>\r\n      <div className=\"container d-flex flex-column align-items-center\">\r\n        <h1 style={{ textAlign: \"center\" }}>Type Your Signature</h1>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control mt-3\"\r\n          placeholder=\"Type name here\"\r\n          onChange={handleTyping}\r\n          value={signature}\r\n        />\r\n\r\n        <div className=\"signatures \">\r\n          <div\r\n            type=\"button\"\r\n            className=\"signature\"\r\n            style={{ fontFamily: fonts.type1 }}\r\n            data-bs-toggle={signature ? \"modal\" : \"\"}\r\n            data-bs-target=\"#exampleModal\"\r\n            onClick={() => {\r\n              if (signature) {\r\n                setIsModalOpen(!isModalOpen);\r\n                setCanvasFont(fonts.type1);\r\n              }\r\n            }}\r\n          >\r\n            <h1>{signature || defaultSignature}</h1>\r\n          </div>\r\n\r\n          <div\r\n            type=\"button\"\r\n            data-bs-toggle={signature ? \"modal\" : \"\"}\r\n            data-bs-target=\"#exampleModal\"\r\n            onClick={() => {\r\n              if (signature) {\r\n                setIsModalOpen(!isModalOpen);\r\n                setCanvasFont(fonts.type2);\r\n              }\r\n            }}\r\n            className=\"signature \"\r\n            style={{ fontFamily: fonts.type2 }}\r\n          >\r\n            <h1>{signature || defaultSignature}</h1>\r\n          </div>\r\n\r\n          <div\r\n            type=\"button\"\r\n            className=\"signature \"\r\n            data-bs-toggle={signature ? \"modal\" : \"\"}\r\n            data-bs-target=\"#exampleModal\"\r\n            onClick={() => {\r\n              if (signature) {\r\n                setIsModalOpen(!isModalOpen);\r\n                setCanvasFont(fonts.type3);\r\n              }\r\n            }}\r\n            style={{ fontFamily: fonts.type3 }}\r\n          >\r\n            <h1>{signature || defaultSignature}</h1>\r\n          </div>\r\n          <div\r\n            type=\"button\"\r\n            className=\"signature \"\r\n            data-bs-toggle={signature ? \"modal\" : \"\"}\r\n            data-bs-target=\"#exampleModal\"\r\n            onClick={() => {\r\n              if (signature) {\r\n                setIsModalOpen(!isModalOpen);\r\n                setCanvasFont(fonts.type4);\r\n              }\r\n            }}\r\n            style={{ fontFamily: fonts.type4 }}\r\n          >\r\n            <h1>{signature || defaultSignature}</h1>\r\n          </div>\r\n          <div\r\n            type=\"button\"\r\n            className=\"signature \"\r\n            data-bs-toggle={signature ? \"modal\" : \"\"}\r\n            data-bs-target=\"#exampleModal\"\r\n            onClick={() => {\r\n              if (signature) {\r\n                setIsModalOpen(!isModalOpen);\r\n                setCanvasFont(fonts.type5);\r\n              }\r\n            }}\r\n            style={{ fontFamily: fonts.type5 }}\r\n          >\r\n            <h1>{signature || defaultSignature}</h1>\r\n          </div>\r\n          <div\r\n            type=\"button\"\r\n            className=\"signature \"\r\n            data-bs-toggle={signature ? \"modal\" : \"\"}\r\n            data-bs-target=\"#exampleModal\"\r\n            onClick={() => {\r\n              if (signature) {\r\n                setIsModalOpen(!isModalOpen);\r\n                setCanvasFont(fonts.type6);\r\n              }\r\n            }}\r\n            style={{ fontFamily: fonts.type6 }}\r\n          >\r\n            <h1>{signature || defaultSignature}</h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","D:\\Aregaki\\react-signature\\src\\components\\Draw.js",[],"D:\\Aregaki\\react-signature\\src\\components\\Canvas.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":63,"column":6,"nodeType":"41","endLine":63,"endColumn":19,"suggestions":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'canvasFont' and 'typeSignature'. Either include them or remove the dependency array.","ArrayExpression",["45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},"Update the dependencies array to be: [canvasFont, isModalOpen, typeSignature]",{"range":"48","text":"49"},[1812,1825],"[canvasFont, isModalOpen, typeSignature]"]